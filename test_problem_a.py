# vim:filetype=python:fileencoding=utf-8

import math, operator, string
import nose.tools as NT


# Problem A
# Find the greatest product of 3 consecutive two-digit numbers in the following
# 1000 digit number:

BIG_NUMBER = ''.join(x.strip() for x in """
    70428252483600823257530420752716362695618826963450
    22482799244429282308634656749342908625693219784686
    96983520312774715852386305071569329045063262395783
    85861560789112949495459501737958331952853208805511
    12540698796329522744304355718016984801869478851843
    66896648950445244523161731856403098711121722383113
    62229893423380308135336276614282806444486645238749
    30358907296290491560440772390713810515859307960866
    70172427121883998797908792274921901699720888093776
    65727333001053367881220235421809751254540594752243
    52584907711670556013604839586446706324415722155397
    53697817977846174064731671765313306249192251955149
    83972241375657056057490261407972968652414535100474
    82166370484403199890008895243450658541227588666881
    16427171491231628245861967442657474235534919481391
    17866458359124566529476545682848912883142607690042
    24219022671055626321111109370544217506941658960408
    07198403850962455444362981230987879927244284909188
    84580156169912560717606609791913387549920052406368
    05886116467109405077541002256983155200055935729725
""".split('\n'))


class TestProblemA(object):

    def test_solution(self):
        NT.assert_equal(648, greatest_product_of_three_consecutive_two_digit_numbers())


def greatest_product_of_three_consecutive_two_digit_numbers():
    """ brute force this! """

    greatest = 0
    for i in range(len(BIG_NUMBER) - 2):
        #print BIG_NUMBER[i:i+3]
        product = int(BIG_NUMBER[i]) * int(BIG_NUMBER[i+1]) * int(BIG_NUMBER[i+2])
        if product > greatest:
            greatest = product

    return greatest
